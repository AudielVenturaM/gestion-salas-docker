
services:
  backend:
    build: ./gestion_salas
    command: python manage.py runserver 0.0.0.0:8000 # Cambiamos a runserver para ver los logs de Django
    ports:
      - "8000:8000"
    volumes:
      - ./gestion_salas:/app
    # Aquí definimos todas las variables de entorno que Django necesita.
    # Docker se las pasará directamente al contenedor al iniciar.
    environment:
      - SECRET_KEY=una-llave-secreta-muy-segura-para-desarrollo-no-usar-en-produccion
      - DEBUG=True
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db  # El host es 'db' para la comunicación entre contenedores.
      - DB_PORT=5432
      # - ./gestion_salas/.env # Le dice a Docker que cargue las variables de nuestro archivo .env
    # environment:
      # - DB_HOST=db # Sobrescribe el DB_HOST para que sea 'db' en lugar de 'localhost'
      - ALLOWED_HOSTS=backend,localhost,127.0.0.1
    depends_on:
      - db

  frontend:
    build: ./frontend-gestion-salas
    ports:
      - "5173:80"
    # Asegura que el backend se inicie antes, para que la API esté disponible
    depends_on:
      - backend
  db:
    image: postgres:16
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/

volumes:
  postgres_data: